# Generated by Django 5.0.1 on 2024-03-23 22:27

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('user_ptr', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('country_code', models.IntegerField(blank=True, choices=[(1, '+1   (Canada)'), (44, '+44  (UK)'), (91, '+91  (India)'), (61, '+61  (Australia)')], default=1, null=True)),
                ('mobile_no', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000000000), django.core.validators.MaxValueValidator(9999999999)])),
                ('age', models.IntegerField()),
                ('address', models.CharField(max_length=150)),
                ('state', models.CharField(choices=[('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NS', 'Nova Scotia'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('ON', 'Ontario'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('YT', 'Yukon')], default='AB', max_length=130)),
                ('city', models.TextField()),
                ('zip_code', models.CharField(max_length=7)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Female', max_length=7)),
                ('offer_letter', models.FileField(blank=True, null=True, upload_to='documents/offer_letters/')),
                ('country', models.CharField(max_length=255)),
                ('identification', models.FileField(blank=True, null=True, upload_to='documents/owner/identifications/')),
                ('rental_license', models.FileField(blank=True, null=True, upload_to='documents/owner/rental_license/')),
                ('occupation', models.IntegerField(blank=True, choices=[(0, 'Employed'), (1, 'Business'), (2, 'Unemployed')], default=0, null=True)),
                ('proofidentity', models.IntegerField(blank=True, choices=[(0, 'Passport'), (1, 'Driving License'), (2, 'Photo ID')], default=0, null=True)),
                ('is_student', models.BooleanField(default=True)),
                ('is_owner', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.TextField()),
            ],
            options={
                'ordering': ['city'],
            },
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='mainapp.category')),
            ],
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_answered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='GroupChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='mainapp.communitypost')),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('type', models.IntegerField(choices=[(0, 'University'), (1, 'College')], default=0)),
                ('address', models.TextField()),
                ('state', models.CharField(choices=[('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NS', 'Nova Scotia'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('ON', 'Ontario'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('YT', 'Yukon')], default='ON', max_length=130)),
                ('zip_code', models.TextField(default='N9B 2T6')),
                ('country', models.TextField(blank=True, default='Canada', null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insitute_city_name', to='mainapp.city')),
            ],
        ),
        migrations.AddField(
            model_name='appuser',
            name='institute',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.institute'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.appuser')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='mainapp.groupchat')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('zipcode', models.TextField(default='N9B 2T6', max_length=50)),
                ('property_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('condo', 'Condo')], max_length=50)),
                ('number_of_bedrooms', models.IntegerField()),
                ('number_of_bathrooms', models.IntegerField()),
                ('amenities', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('not_available', 'Not Available'), ('coming_soon', 'Coming Soon')], max_length=50)),
                ('available_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('available_to', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_biddable', models.BooleanField(default=True)),
                ('bidding_min_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lease_required', models.BooleanField(default=True)),
                ('lease_duration', models.IntegerField(default=12)),
                ('allowed_lease_people', models.IntegerField(default=2)),
                ('rules', models.TextField(blank=True)),
                ('prop_image1', models.ImageField(blank=True, null=True, upload_to='documents/property_images/')),
                ('prop_image2', models.ImageField(blank=True, null=True, upload_to='documents/property_images/')),
                ('prop_image3', models.ImageField(blank=True, null=True, upload_to='documents/property_images/')),
                ('prop_image4', models.ImageField(blank=True, null=True, upload_to='documents/property_images/')),
                ('prop_image5', models.ImageField(blank=True, null=True, upload_to='documents/property_images/')),
                ('house_build_date', models.DateField(default=django.utils.timezone.now)),
                ('bidding_end_date', models.DateField(default=django.utils.timezone.now)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_name', to='mainapp.city')),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='owner_name', to='mainapp.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Bidding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('bidding_status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], max_length=100)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], max_length=50)),
                ('bidding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.appuser')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('title_deed', 'Title Deed'), ('lease_agreement', 'Lease Agreement'), ('utility_bill', 'Utility Bill'), ('building_approval_plan', 'Building Approval Plan'), ('occupancy_certificate', 'Occupancy Certificate')], max_length=50)),
                ('document_image', models.ImageField(upload_to='documents/')),
                ('description', models.TextField(blank=True)),
                ('verification_status', models.BooleanField(default=False, help_text='True if the document has been verified')),
                ('upload_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mainapp.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyVisits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visited_properties', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='mainapp.appuser')),
            ],
        ),
    ]
